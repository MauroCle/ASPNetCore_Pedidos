@model Examenes.ViewModels.AddressViewModel;

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Address</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Street)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Street)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Number)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Number)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Apartment)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Apartment)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostalCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PostalCode)
        </dd>
        @if(!string.IsNullOrEmpty(Model.ClientFirstName))
        {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ClientFirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ClientFirstName) @Html.DisplayFor(model => model.ClientLastName)
        </dd>
        }
    </dl>
</div>
        <div class="form-group row justify-content-around col-4">
            <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary mt-3 col-4">Editar</a> 
            <a asp-action="Index" class="btn btn-primary mt-3 col-4">Volver a la lista</a>
        </div>
