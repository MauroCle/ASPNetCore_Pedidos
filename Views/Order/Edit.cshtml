@model Examenes.ViewModels.OrderEditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar orden</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ClientId" class="control-label"></label>
                <select asp-for="ClientId" class="form-select">
                    @foreach (var item in Model.Clients)
                    {
                        <option value="@item.Id">@item.FirstName @item.LastName - @item.Email</option>
                    }
                </select>
                <span asp-validation-for="ClientId" class="text-danger"></span>
            </div>
            <table class="table text-center">
                <thead>
                    <tr>
                        <th><label asp-for="Products"></label></th>
                        <th><label asp-for="ProductStockDictionary"></label></th>
                        <th>Cantidad</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.Products)
                    {
                        <tr>
                            <div class="row mt-3 alin">
                            <td class="col-6"><p class="m-none">@item.Name - @item.Description</p></td>
                            <td class="col-4"><p>
                                @if(Model.ProductStockDictionary.ContainsKey(item.Id))
                                {
                                    @(Model.ProductStockDictionary[item.Id]+item.Stock)
                                }else{
                                    @(item.Stock)
                                }
                                </p></td>
                            <td class="col-1">
                                <input class="text-center" 
                                       type="number" 
                                       name="ProductStockDictionary[@item.Id]" 
                                       value="@(Model.ProductStockDictionary.GetValueOrDefault(item.Id, 0))"
                                       max="@(Model.ProductStockDictionary.GetValueOrDefault(item.Id, 0) + item.Stock)"
                                       min="0">
                                </input>
                            </td>

                            </div>
                        </tr>
                    }
    </tbody>
    </table>

    <div class="form-group row justify-content-around col-12">
        <input type="submit" value="Guardar" class="btn btn-success mt-3 col-4"></input>
        <a asp-action="Index" class="btn btn-info mt-3 col-4">Volver a la lista</a>
    </div>
    </form>
</div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
