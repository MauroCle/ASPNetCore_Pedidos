@model Examenes.ViewModels.OrderCreateViewModel
@using Examenes.Models

@{
    ViewData["Title"] = "Create";

}

<h1>Create order</h1>
@if (ViewData.ModelState.Any(m => m.Value.Errors.Any()))
{
    <div class="alert alert-danger" role="alert">
        <strong>Error:</strong>

        @foreach (var key in ViewData.ModelState.Keys)
        {
            foreach (var error in ViewData.ModelState[key].Errors)
            {
                @error.ErrorMessage
            }
        }

    </div>
}
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">

            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ClientId" class="control-label"></label>
                <select asp-for="ClientId" class="form-select">
                    @foreach (var item in Model.Clients ?? Enumerable.Empty<Client>())
                    {
                        <option value="@item.Id">@item.FirstName @item.LastName - @item.Email</option>
                    }
                </select>
                <span asp-validation-for="ClientId" class="text-danger"></span>
            </div>

            @*  *@

            <table class="table text-center">
                <thead>
                    <tr>
                        <th><label asp-for="Products"></label></th>
                        <th><label asp-for="ProductStockDictionary"></label></th>
                        <th>Cantidad</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.Products)
                    {
                        <tr>
                            <div class="row mt-3 alin">
                            <td class="col-6"><p class="m-none">@item.Name - @item.Description</p></td>
                            <td class="col-4"><p>@item.Stock</p></td>
                            <td class="col-1"><input class="text-center" type="number" name="ProductStockDictionary[@item.Id]" value="0" max="@item.Stock" /></td>
        </div>
        </tr>
                    }
    </tbody>
    </table>

            @*  *@

    <div class="form-group row justify-content-around">
        <input type="submit" value="Guardar" class="btn btn-success mt-3 col-4" />
        <a type="button" asp-controller="Order" asp-action="Index" class="btn btn-info mt-3 col-4">Volver a la lista</a>
    </div>
    </form>
</div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }